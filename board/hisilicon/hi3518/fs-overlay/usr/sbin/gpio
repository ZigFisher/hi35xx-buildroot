#!/bin/sh
#
# ZFT Lab. 2018 | https://zftlab.org/pages/2018020900.html
# Hisilicon HI35xx simple GPIO monitor


cmd="$1"
per="$2"
ctl="/sys/class/gpio/gpio"


basic(){
  clear
  hardware=$(awk -F ': ' '/Hardware/ {print $2} 'cat /proc/cpuinfo)
  if [[ "${hardware}" == 'hi3518' ]]; then
    ircut1="38"
    ircut2="39"
    irled="?"
    maxgpio="95"
  elif [[ "${hardware}" == 'hi3518ev200' ]]; then
    ircut1="1"
    ircut2="2"
    irled="?"
    maxgpio="71"
  fi
}

help() {
  echo -e "\nYou SoC on board - ${hardware}\n"
  echo -e "MaxGPIO: ${maxgpio} | IRCUT_ON: ${ircut1} | IRCUT_FF: ${ircut2} | IRLED: ${irled}\n"
  echo -e "Please select command:\n"
  echo " gpio ircut_on"
  echo " gpio ircut_off"
  echo " gpio info"
  echo " gpio debug"
  echo " gpio search"
  echo ""
}

debug() {
  echo "Mount DEBUGFS and get info about all GPIO"
  [ -f /sys/kernel/debug/gpio ] || mount -t debugfs none /sys/kernel/debug >/dev/null 2>&1
  [ -f /sys/kernel/debug/gpio ] && watch "cat /sys/kernel/debug/gpio"
}

info() {
  echo "Mount DEBUGFS and get info about all GPIO"
  [ -f /sys/kernel/debug/gpio ] || mount -t debugfs none /sys/kernel/debug >/dev/null 2>&1
  [ -f /sys/kernel/debug/gpio ] && cat /sys/kernel/debug/gpio
}

ircut_on() {
  echo "Probe set IRCUT to ON"
  [ ! -f /sys/class/gpio/export ] && exit
  [ ! -d ${ctl}${ircut1} ] && echo ${ircut1} >/sys/class/gpio/export
  [ -f ${ctl}${ircut1}/direction ] && echo out > ${ctl}${ircut1}/direction && \
    (echo 1 >${ctl}${ircut1}/value ; usleep 250 ; echo 0 >${ctl}${ircut1}/value ; echo in > ${ctl}${ircut1}/direction)
}

ircut_off() {
  echo "Probe set IRCUT to OFF"
  [ ! -f /sys/class/gpio/export ] && exit
  [ ! -d ${ctl}${ircut2} ] && echo ${ircut2} >/sys/class/gpio/export
  [ -f ${ctl}${ircut2}/direction ] && echo out > ${ctl}${ircut2}/direction && \
    (echo 1 >${ctl}${ircut2}/value ; usleep 250 ; echo 0 >${ctl}${ircut2}/value ; echo in > ${ctl}${ircut2}/direction)
}

search() {
  echo "Start blink (output) on all gpio"
  echo ""
  for pin in $(seq 0 ${maxgpio}); do
    echo "================================="
    [ ! -f /sys/class/gpio/export ] && exit
    [ ! -d ${ctl}${pin} ] && echo ${pin} >/sys/class/gpio/export && echo "Activate in system GPIO-${pin}"
    [ -f ${ctl}${pin}/direction ] && echo out >${ctl}${pin}/direction && echo "  Set GPIO-${pin} to OUTPUT mode"
    [ -f ${ctl}${pin}/value ] && echo 0 >${ctl}${pin}/value && echo "    Set GPIO-${pin} to LO level" ; sleep 1
    [ -f ${ctl}${pin}/value ] && echo 1 >${ctl}${pin}/value && echo "    Set GPIO-${pin} to HI level" ; sleep 1
    [ -f ${ctl}${pin}/direction ] && echo in >${ctl}${pin}/direction && echo "  Set GPIO-${pin} to INPUT mode"
    #[ -d ${ctl}${pin} ] && echo ${pin} >/sys/class/gpio/unexport && echo "Remove from system GPIO-${pin}"
  done
}

blink() {
  echo "Start blink (output) on selected gpio"
  [ ! -f /sys/class/gpio/export ] && exit
  while [ true ]; do
    echo "================================="
    [ ! -d ${ctl}${per} ] && echo ${per} >/sys/class/gpio/export && echo "Activate in system GPIO-${per}"
    [ -f ${ctl}${per}/direction ] && echo out >${ctl}${per}/direction && echo "  Set GPIO-${per} to OUTPUT mode"
    [ -f ${ctl}${per}/value ] && echo 0 >${ctl}${per}/value && echo "    Set GPIO-${per} to LO level" ; sleep 1
    [ -f ${ctl}${per}/value ] && echo 1 >${ctl}${per}/value && echo "    Set GPIO-${per} to HI level" ; sleep 1
    [ -f ${ctl}${per}/direction ] && echo in >${ctl}${per}/direction && echo "  Set GPIO-${per} to INPUT mode"
    [ -d ${ctl}${per} ] && echo ${per} >/sys/class/gpio/unexport && echo "Remove from system GPIO-${per}"
  done
}


basic
if [ $# -ge 1 ]; then
  ${cmd}
else
  help
fi
